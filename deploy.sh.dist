#!/bin/bash

#
# Shell script for remote deployment.
#
# Notes:
# - Git is assumed
# - Composer is assumed
# - Windows host and Cygwin environment is assumed
# - UNIX target environment with SSH+rsync is assumed
#

ORIGIN_DIRECTORY="deploy_tmp"
GIT_URI=""

# Answer to continue
echo
echo -n "Do you want to deploy on production or pre production environment?. (pro/pre): "
read -r answer

if [ "$answer" = "pro" ] ; then
    echo
    echo "Production environment"
    ENVIRONMENT="pro"
    SSH_DIRECTORY=""
    SSH_PORT="22"
elif [ "$answer" = "pre" ] ; then
    echo
    echo "Pre production environment"
    ENVIRONMENT="pre"
    SSH_DIRECTORY=""
    SSH_PORT="22"
else
    echo
    echo "Bad selection"
    echo "Good bye!"
    exit
fi

# Download project according repository GIT
echo "Download project and save into temporary directory"
if [ "$ENVIRONMENT" = "pro" ] ; then
    echo
    cd "$HOME" && rm -rf "$ORIGIN_DIRECTORY"
    cd "$HOME" && git clone "$GIT_URI" "$ORIGIN_DIRECTORY" --verbose
elif [ "$ENVIRONMENT" = "pre" ] ; then
    echo
    cd "$HOME" && rm -rf "$ORIGIN_DIRECTORY"
    cd "$HOME" && git clone "$GIT_URI" "$ORIGIN_DIRECTORY" --verbose --single-branch --branch develop
fi

if [ "$?" != "0" ] ; then
    echo
    echo "ERROR: Download project."
    cd "$HOME" && rm -rf "$ORIGIN_DIRECTORY"
    exit
fi

# Execute composer and install packages
echo
echo "Execute composer and install packages"
cd "$HOME/$ORIGIN_DIRECTORY" && composer install --no-dev --no-scripts -vvv

if [ "$?" != "0" ] ; then
    echo
    echo "ERROR: Composer install."
    cd "$HOME" && rm -rf "$ORIGIN_DIRECTORY"
    exit
fi

# Create symbolic link
echo
echo "Create symbolic link"
cd "$HOME/$ORIGIN_DIRECTORY" && mkdir "public/bundles" && ln -s "../../vendor/api-platform/core/src/Bridge/Symfony/Bundle/Resources/public/" "public/bundles/apiplatform"

if [ "$?" != "0" ] ; then
    echo
    echo "ERROR: Create symbolic link."
    cd "$HOME" && rm -rf "$ORIGIN_DIRECTORY"
    exit
fi

# Deploy local to production environment
echo
echo "Deploying with dry-run"
rsync --delete --progress --exclude-from="$HOME/$ORIGIN_DIRECTORY/deploy-exclude-list.txt" -avzh "$HOME/$ORIGIN_DIRECTORY/" -e "ssh -p $SSH_PORT" "$SSH_DIRECTORY" --dry-run

if [ "$?" != "0" ] ; then
    echo
    echo "ERROR: Deploying with --dry-run."
    cd "$HOME" && rm -rf "$ORIGIN_DIRECTORY"
    exit
fi

# Answer to continue
echo
echo "Deploying with dry-run successfully"
echo -n "Do you want to continue the execution without dry-run? (y/n)?: "
read -r answer

if [ "$answer" != "${answer#[Yy]}" ] ; then
    echo "Yes! senseless! cross your fingers and wait"
    sleep 5
else
    cd "$HOME" && rm -rf "$ORIGIN_DIRECTORY"
    echo "Good bye!"
    exit
fi

# Deploy local to production environment
echo
echo "Deploying..."
rsync --delete --progress --exclude-from="$HOME/$ORIGIN_DIRECTORY/deploy-exclude-list.txt" -avzh "$HOME/$ORIGIN_DIRECTORY/" -e "ssh -p $SSH_PORT" "$SSH_DIRECTORY"

if [ "$?" != "0" ] ; then
    echo
    echo "ERROR: Deploying"
    cd "$HOME" && rm -rf "$ORIGIN_DIRECTORY"
    exit
fi

# Delete the temporal directory
echo
echo "Delete the temporal directory"
cd "$HOME" && rm -rf "$ORIGIN_DIRECTORY"

# Finish
echo
echo "Finish"
exit
